//INCLUDE NECCESSARY FILES HERE

//Standard library includes
#include <avr32/io.h>

//Kernel includes
#include "kernel/rosa_ker.h"
#include "kernel/rosa_clk.h"
#include "kernel/rosa_semaphore.h"

//Driver includes
#include "drivers/led.h"
#include "drivers/delay.h"
#include "drivers/usart.h"

//Include configuration
#include "rosa_config.h"


//Data blocks for the tasks
#define TASK_REL_DELAY_STACK_SIZE 0x40
static int task_rel_delay_stack[TASK_REL_DELAY_STACK_SIZE];
static tcb task_rel_delay_tcb;
unsigned int task_rel_delay_priority;

//Data blocks for the tasks
#define TASK_ABS_DELAY_STACK_SIZE 0x40
static int task_abs_delay_stack[TASK_ABS_DELAY_STACK_SIZE];
static tcb task_abs_delay_tcb;
unsigned int task_abs_delay_priority;

//Global counter neccessary for absolute delay function
unsigned int counter = 1;

/*************************************************************
 * Relative Delay Task
 * LED0 lights up for one second using relative delay function
 * and then goes dark for one second       
 ************************************************************/
void taskRelativeDelay(void)
{
	const rosaTicks ticksToDelay = 1000;
	while(1) {
		ledOn(LED0_GPIO);
		ROSA_taskDelay(ticksToDelay);
		ledOff(LED0_GPIO);
		ROSA_taskDelay(ticksToDelay);

	}
}

/*************************************************************
 * Absolute Delay Task
 * LED1 lights up at 5000*counter system clock ticks and stays      
 * lit until 10000*counter system clock ticks
 ************************************************************/
void taskAbsoluteDelay(void)
{
	const rosaTicks ticksToDelay = 5000;
	while(1) {
		
		ledOff(LED1_GPIO);
		ROSA_taskDelayUntil(ticksToDelay*counter);
		ledOn(LED1_GPIO);
		counter ++;
		ROSA_taskDelayUntil(ticksToDelay*counter);
		counter++;
				
	}
}

/*************************************************************
 * Main function
 ************************************************************/
int main(void)
{
	//Initialize the ROSA kernel
	ROSA_init();
	
	//Assign appropriate priorites to the tasks
	task_rel_delay_priority = 1;
	task_abs_delay_priority = 1;

	//Create neccessary tasks
	ROSA_TaskCreate(&task_rel_delay_tcb, "RELATIVE DELAY", taskRelativeDelay, task_rel_delay_stack, TASK_REL_DELAY_STACK_SIZE, task_rel_delay_priority );

	ROSA_TaskCreate(&task_abs_delay_tcb, "ABSOLUTE DELAY",	taskAbsoluteDelay, task_abs_delay_stack, TASK_ABS_DELAY_STACK_SIZE, task_abs_delay_priority);

	//Start the ROSA kernel
	ROSA_start();
	/* Execution will never return here */
	while(1);
}